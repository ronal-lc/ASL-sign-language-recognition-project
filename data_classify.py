"""
ASL Hand Sign Classifier Training Script

This script trains a neural network to classify American Sign Language (A-Z + STOP) hand signs
using landmark data extracted from images. The model is saved in Keras format for later use.

Usage:
    - Ensure 'data_signs.pickle' exists (generated by the dataset creation script).
    - Run this script to train and save the model as 'model.keras'.

Dependencies:
    - scikit-learn
    - tensorflow
    - pickle

Author: @ronal-lc
"""

import pickle
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout, Input
from tensorflow.keras.optimizers import Adam

# Load dataset
with open('data_signs.pickle', 'rb') as f:
    dataset = pickle.load(f)

X = dataset['data']
y = dataset['labels']

# Encode labels as integers
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# Stratified train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y_encoded, test_size=0.2, random_state=42, stratify=y_encoded
)

# Neural network model definition
model = Sequential([
    Input(shape=(42,)),  # 21 landmarks * 2 (x, y)
    Dense(128, activation='relu'),
    Dense(64, activation='relu'),
    Dense(27, activation='softmax')  # 26 letters + STOP
])

# Compile the model
model.compile(
    optimizer=Adam(learning_rate=0.0005),
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)

# Train the model
model.fit(
    X_train, y_train,
    epochs=30,
    validation_data=(X_test, y_test)
)

# Evaluate the model
loss, accuracy = model.evaluate(X_test, y_test)
print(f"Model accuracy: {accuracy * 100:.2f}%")

# Save the trained model
model.save('model.keras')